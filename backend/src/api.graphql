### This file was generated by Nexus Schema
### Do not make changes to this file directly

input AuthInput {
  email: String!
  password: String!
}

type Comment {
  comment: String
  id: ID
}

type Mutation {
  addCommentToReview(ReviewCommentInput: ReviewCommentInput!): Comment
  addRestaurant(RestaurantInput: RestaurantInputs!): Restaurant
  addReview(restaurant: String!, ReviewInput: ReviewInput!): Review
  createUser(AuthInput: AuthInput!, ProfileInput: ProfileInput!): SessionToken
  deleteCommentById(commentId: String!): Boolean
  deleteRestaurantById(restaurantId: String!): Boolean
  deleteReviewById(reviewId: String!): Boolean
  deleteUserById(userId: String!): Boolean
  loginUser(AuthInput: AuthInput!): SessionToken
}

type Profile {
  id: ID
  name: String
  role: Role
}

input ProfileInput {
  name: String!
  role: Role!
}

type Query {
  allRestaurants: [Restaurant]
  me: User
  ok: Boolean
  restaurantById(id: String!): Restaurant
}

type Restaurant {
  description: String
  id: ID
  name: String
  owner: User
  Reviews: [Review]
  score: Score
}

input RestaurantInputs {
  description: String!
  name: String!
  owner: String
}

type Review {
  author: User
  comment: String
  id: ID
  ownerComment: Comment
  rating: Int
  restaurant: Restaurant
}

input ReviewCommentInput {
  comment: String!
  reviewId: String!
}

input ReviewInput {
  comment: String!
  rating: Int!
}

"""
The auth level of the logged in user
"""
enum Role {
  admin
  owner
  user
}

type Score {
  numOfReviews: Int
  score: Float
}

type SessionToken {
  token: String
}

type User {
  email: String
  id: ID
  profile: Profile
  restaurants: [Restaurant]
  reviews: [Review]
}
